{"version":3,"sources":["webpack://nillaJS/webpack/universalModuleDefinition","webpack://nillaJS/webpack/bootstrap","webpack://nillaJS/webpack/runtime/make namespace object","webpack://nillaJS/./src/modules/Background.js","webpack://nillaJS/./src/modules/Link.js","webpack://nillaJS/./src/modules/Icon.js","webpack://nillaJS/./src/modules/List.js","webpack://nillaJS/./src/modules/Linklist.js","webpack://nillaJS/./src/modules/Header.js","webpack://nillaJS/./src/modules/Leader.js","webpack://nillaJS/./src/modules/Title.js","webpack://nillaJS/./src/modules/Block.js","webpack://nillaJS/./src/modules/Image.js","webpack://nillaJS/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","Symbol","toStringTag","Object","defineProperty","value","_tag","_class","_target","_text","_title","_url","_icon","_icon_color","this","encodeURI","icon","color","Icon","output","List","_listItems","split","listItems_output","forEach","item","list_class","length","_urls","_targets","_classes","_icons","super","links","map","url","i","link_text","target","link_class","l","render","_type","_headlineTag","_headline","_headlineUrl","_headlineColor","_leader","_leaderListItems","_leaderListClass","_leaderListTag","_lkUrls","_lkTtls","_lkTgts","text","_color","replace","_leaderList","_links","list","html","Block","dataset","children","blockType","_list","leaderListItems","_listClass","leaderListClass","_header","headline","headlineUrl","headlineColor","leader","leaderListTag","linkUrls","linkTitles","linkTargets","linkClasses","linkIcons","_img","imgUrl","_imgUrl","_imgAlt","_imgFormat","_showCaption","_imgX","_imgY","_imgBorder","_imgBorWidth","_imgShadow","_alt","_format","_caption","ratio_multiplier","tag","filename","match","decodeURI","style","imgAlt","imgFormat","imgCaption","imgX","imgY","imgBorder","imgBorderWidth","imgShadow","_bg","_uri","_gradient","_attachment","bgImg","bgGrad","bgColr","bgAttach","_children","_mobileCompact","mobileCompact","child_nodes","imageLeft","imageRight","indexOf","cards","get_cards","cards_output","card","Card","mobile_compact","img","mobile","join","window","NodeList","prototype","callback","thisArg","call","document","querySelectorAll","section","block","type","classList","add","setAttribute","background","innerHTML"],"mappings":"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","file":"nilla.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nillaJS\"] = factory();\n\telse\n\t\troot[\"nillaJS\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Defines a Background object.\n *\n * Output HTML (outputs an inline style attribute for a tag)\n *\n * style=\"background-color:_color;background-image: _uri, _gradient;background-attachment: _attachment;\"\n *\n * @params:\n *  _uri (string)\n *  _gradient (string)\n *  _color (string)\n *  _attachment (string)\n *\n */\n\nclass Background {\n    constructor(\n        _uri = \"\",\n        _gradient = \"\",\n        _color = \"\",\n        _attachment = \"\",\n    ) {\n        this._uri = _uri;\n        this._gradient = _gradient;\n        this._color = _color;\n        this._attachment = _attachment;\n    }\n\n    /**\n     * Return the inline styles string for the Background element.\n     * @returns {string}\n     */\n    render(){\n        let bgImg = this._gradient ? `url(${this._uri}), ${this._gradient}` : `url(${this._uri})`;\n        return `background-attachment: ${this._attachment}; background-color: ${this._color};background-image: ${bgImg};`;\n    }\n}\n\nexport default Background;","/**\n * Defines a Link object.\n *\n * Output HTML\n *\n * <a href=\"_url\" title=\"_title\" target=\"_self\"> <_tag>Text</_tag> </_a>\n *\n *\n * @params:\n *  _tag string (h2 | h3 | button)\n *  _target string (self | parent | top | blank)\n *  _text string\n *  _title string\n *  _url string\n *\n */\nimport Icon from \"./Icon.js\";\n\nclass Link {\n    constructor(\n        _tag = 'a',\n        _class = '',\n        _target = 'self',\n        _text = 'Text',\n        _title = 'Title',\n        _url = '_url',\n        _icon = '',\n        _icon_color = '#333'\n    ) {\n        this._tag = _tag;\n        this._class = _class !== '' ? `class=\"${_class}\"` : '';\n        this._target = _target;\n        this._text = _text;\n        this._title = _target === 'blank' ? `${_title}. This link opens in new window.` : _title;\n        this._url = encodeURI(_url);\n        this._icon = _icon;\n        this._icon_color = _icon_color;\n    }\n    render(){\n        // Icon markup.\n        let arrow_icon = `<span class=\"material-icons\">arrow_forward</span>`;\n        let chevron_icon = `<span class=\"material-icons\">chevron_right</span>`;\n        //let icon = `<span class=\"material-icons chevron\">&#10095;</span>`;\n        let icon = Icon(this._icon, this._icon_color);\n\n        // The default string output\n        let output = `<a ${this._class} href=\"${this._url}\" title=\"${this._title}\" target=\"${this._target}\">${this._text} ${icon}</a>`;\n\n        switch (this._tag) {\n            // Wrap the output within a h2/h3 tag.\n            case 'h2':\n            case 'h3':\n                return `<${this._tag}>${output}</${this._tag}>`;\n\n            // Wrap the <a> around a button.\n            case 'button':\n                return `<a href=\"${this._url}\" title=\"${this._title}\" target=\"${this._target}\"><button ${this._class}>${this._text}</button></a>`;\n\n            default:\n                return output;\n        }\n    }\n}\n\nexport default Link;","/**\n * Returns the HTML for the desired icon.\n *\n * @param icon {string}\n * @param color {string}\n * @returns {string}\n *\n */\nexport default function Icon(icon, color) {\n    // Return an empty string if icon is not provided.\n    if(icon === '') return '';\n\n    switch (icon){\n        case 'arrow':\n            let arrow = '<svg ' +\n                'aria-hidden=\"true\" ' +\n                //'focusable=\"false\" ' +\n                //'data-prefix=\"fas\" ' +\n                //'data-icon=\"arrow-circle-right\" ' +\n                //'role=\"img\" ' +\n                //'xmlns=\"http://www.w3.org/2000/svg\" ' +\n                'viewBox=\"0 0 512 512\" ' +\n                'class=\"text-unt-yellow\"' +\n                'style=\"color:' + color + ';\">' +\n                    '<path fill=\"currentColor\" d=\"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm-28.9 143.6l75.5 72.4H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h182.6l-75.5 72.4c-9.7 9.3-9.9 24.8-.4 34.3l11 10.9c9.4 9.4 24.6 9.4 33.9 0L404.3 273c9.4-9.4 9.4-24.6 0-33.9L271.6 106.3c-9.4-9.4-24.6-9.4-33.9 0l-11 10.9c-9.5 9.6-9.3 25.1.4 34.4z\"></path>' +\n                '</svg>';\n            return arrow;\n\n        case 'chevron_right':\n            let chevron_right = '<svg ' +\n                'aria-hidden=\"true\" ' +\n                //'focusable=\"false\" ' +\n                //'data-prefix=\"fas\" ' +\n                //'data-icon=\"chevron-right\" ' +\n                //'role=\"img\" ' +\n                //'xmlns=\"http://www.w3.org/2000/svg\" ' +\n                'viewBox=\"0 0 320 512\" ' +\n                'class=\"svg-inline--fa fa-chevron-right fa-w-10\"' +\n                'style=\"color:' + color + ';\">' +\n                    '<path fill=\"currentColor\" d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"></path>' +\n                '</svg>';\n            return chevron_right;\n    }\n}","/**\n * Defines the List object.\n *\n * Output HTML\n * <_tag>\n *     <li>_listItems[i]</li>\n * </_tag>\n *\n * @params\n *  _tag (string) options are ul | ol\n *  _class (string)\n *  _list_items (string)\n *\n */\n\nexport default class List {\n    constructor(_tag = '', _class, _listItems = null){\n        this._tag = _tag ? _tag : 'ul';\n        this._class = _class ? _class : '';\n        this._listItems = _listItems ? _listItems.split(' | ') : [];\n    }\n\n    render(){\n        // Process the list items.\n        let listItems_output = '';\n        this._listItems.forEach( (item) => {\n           listItems_output += `<li>${ item }</li>`;\n        });\n\n        // Process the class attribute\n        let list_class = '';\n        if(this._class.length > 0){\n            list_class = `class=\"${ this._class }\"`;\n        }\n\n        return `<${ this._tag } ${ list_class }>${ listItems_output }</${ this._tag }>`;\n    }\n}","/**\n * Defines the Linklist object\n *\n * Output HTML\n * <_tag class=\" _type \">\n *     <Link />\n * </_tag>\n *\n * @params\n *  _tag (string) ul or ol\n *  _class (string)\n *  _listItems (array) List of title text in same order as _urls.\n *  _urls (array) Comma separated list of URLs\n *  _targets (array) Comma separated list of targets in same order as _urls.\n *\n */\nimport Link from \"./Link\";\nimport List from \"./List\";\n\nclass Linklist extends List {\n    constructor(\n        _tag,\n        _class,\n        _listItems,\n        _urls,\n        _targets,\n        _classes,\n        _icons\n    ) {\n        super(_tag,_class,_listItems);\n\n        this._urls = _urls ? _urls.split(', ') : [];\n        this._targets = _targets ? _targets.split(', ') : [];\n        this._classes = _classes ? _classes.split(', ') : [];\n        this._icons = _icons ? _icons.split(', ') : [];\n    }\n\n    /**\n     * Return the HTML output for this Link List.\n     * @returns {string}\n     */\n    render(){\n        if(!this._urls.length > 0){ return '';}\n\n        let links = '';\n        let target = '';\n        this._urls.map( (url, i) => {\n\n            // Include the link target if provided.\n            // if(this._targets[i]){\n            //     target = this._targets[i];\n            // }\n            let link_text = this._listItems[i];\n            let target = this._targets.length > 0 ? this._targets[i] : '';\n            let link_class = this._classes.length > 0 ? this._classes[i] : '';\n            let icon = this._icons.length > 0 ? this._icons[i] : '';\n\n            // Create a Link object.\n            let l = new Link('a', this._class, target, link_text, link_text, url, link_class, icon);\n\n            // Append to the HTML output.\n            links += `<li>${ l.render() }</li>`;\n        });\n\n        return `<${ this._tag } class=\"${ this._class }-list\">${ links }</${ this._tag }><!-- /.${this._class}-list -->`;\n    }\n}\n\nexport default Linklist;","/**\n * Defines the Header object.\n *\n * Output HTML\n * <header>\n *     <Title />\n *     <hr />\n *     <Leader />\n *     <Linklist />\n * </header>\n */\n\nimport Title from \"./Title\";\nimport Leader from \"./Leader\";\nimport List from \"./List\";\nimport Linklist from \"./Linklist\";\n\nclass Header {\n    constructor(\n        _type,\n        _headlineTag = null,\n        _headline = null,\n        _headlineUrl = null,\n        _headlineColor = '',\n        _leader = null,\n        _leaderListItems = null,\n        _leaderListClass = '',\n        _leaderListTag = 'ul',\n        _lkUrls = null,\n        _lkTtls = null,\n        _lkTgts = null,\n    ) {\n        this._title = _headline ? Title(_type, _headlineTag, _headline, _headlineColor, _headlineUrl) : '';\n        this._leader = _leader ? Leader(_leader) : '';\n        this._leaderList = _leaderListItems ? new List(_leaderListTag, _leaderListClass, _leaderListItems) : null;\n        this._links = new Linklist('ul','btn', _lkTtls, _lkUrls, _lkTgts);\n        this._type = _type;\n    }\n    render() {\n        // Get the list output string.\n        let list = '';\n        if(this._leaderList){\n           list = this._leaderList.render();\n        }\n\n        let html = `\n                ${ this._title }\n                <hr />\n                ${ this._leader }\n                ${ list }\n                ${ this._links.render() }\n        `;\n\n        if(this._type[0] === 'Title_card' && this._type[1] !== 'tclB'){\n            return html;\n        }\n        return `<header>${ html }</header>`;\n    }\n}\n\nexport default Header;","/**\n * Defines a Leader.\n *\n * HTML Output\n * <p class=\"leader\"> { Leader }</p>\n *\n */\n\nfunction Leader (text) {\n    if( text === ''){ return ''; }\n    return `<p class=\"leader\">${text}</p>`;\n}\n\nexport default Leader;","/**\n * Returns a formatted Title.\n *\n * HTML Output\n * <_tag>{ Title }</_tag>\n * If _url is provided, Title will be wrapped in <a> tags.\n *\n * @params\n *  _tag (string)\n *  _text (string)\n *  _url (string)\n *\n */\nimport Link from \"./Link\";\n\nfunction Title(_type, _tag, _text, _color = '', _url = null) {\n    // If no text is provided, return an empty string.\n    if(_text === ''){ return ''; }\n\n    // Replace '*/*' with <br /> tag.\n    _text = _text.replace(/\\*\\/\\*/, '<br />');\n\n    // Create the style attribute if _color is provided.\n    let shadow = _color === 'white' ? 'black' : 'white';\n    let color = _color !== '' ? `style=\"color:${_color};text-shadow:0 0 5px ${shadow};\"` : '';\n\n    // If url is provided, return as a link.\n    if(_url){\n        // Create a Link object.\n        let title_link = new Link('a','','self',_text, _text, _url);\n\n        return `<${ _tag } ${color}>${ title_link.render() }</${ _tag }>`;\n    }\n\n    return `<${ _tag } ${color}>${ _text }</${ _tag }>`;\n}\n\nexport default Title;","/**\n * Defines a Block object.\n * The Card class (defined at the bottom of this file) extends Block.\n *\n * HTML Output\n * <section class=\"\" id=\"\" <Background /> >\n *     <Image />\n *     <Title />\n *     <Leader />\n *     <Link />\n * </section>\n *\n * @param dataset (object) The entire dataset of the element.\n *\n */\nimport Background from \"./Background\";\nimport Image from \"./Image\";\nimport Header from \"./Header\";\n\nexport default class Block {\n    constructor( dataset, children ) {\n\n        this._type = dataset.blockType && dataset.blockType.length > 0 ? dataset.blockType.split(' ') : [];\n        this._list = dataset.leaderListItems ? dataset.leaderListItems : null;\n        this._listClass = dataset.leaderListClass ? dataset.leaderListClass : '';\n        this._header = new Header(\n            this._type,\n            'h2',\n            dataset.headline,\n            dataset.headlineUrl,\n            dataset.headlineColor,\n            dataset.leader,\n            dataset.leaderListItems,\n            dataset.leaderListClass,\n            dataset.leaderListTag,\n            dataset.linkUrls,\n            dataset.linkTitles,\n            dataset.linkTargets,\n            dataset.linkClasses,\n            dataset.linkIcons\n        );\n        this._img = dataset.imgUrl ?\n            new Image(\n                dataset.imgUrl,\n                dataset.imgAlt,\n                dataset.imgFormat,\n                dataset.imgCaption,\n                dataset.imgX,\n                dataset.imgY,\n                dataset.imgBorder,\n                dataset.imgBorderWidth,\n                dataset.imgShadow\n            ) : null;\n        this._bg = new Background(\n            dataset.bgImg,\n            dataset.bgGrad,\n            dataset.bgColr,\n            dataset.bgAttach\n        );\n        this._children = children ? children : [];\n        this._mobileCompact = dataset.mobileCompact ? dataset.mobileCompact : 'false';\n    }\n\n    /**\n     * Return an array of child elements (articles) to be formatted as cards.\n     * @returns {[]}\n     */\n    get_cards(){\n        let child_nodes = [];\n        if(this._children.length > 0){\n            let i;\n            for(i = 0; i < this._children.length; i++){\n                child_nodes[i] = this._children[i];\n            }\n        }\n        return child_nodes;\n    }\n\n    /**\n     * Return the background style attribute.\n     * @returns {string}\n     */\n    background(){\n        return this._bg.render();\n    }\n\n    /**\n     * Return the HTML of this block.\n     * @returns {string}\n     */\n    render(){\n\n        let html = '';\n        let imageLeft = '';\n        let imageRight = '';\n\n        // Process the image if there is one\n        if(this._type[0] === 'Image_block' && this._img){\n            if(\n                //this._type.find(string => string === 'iblB') ||\n                //this._type.find(string => string === 'iblD')\n                this._type.indexOf('iblB') !== -1 || this._type.indexOf('iblD') !== -1\n                ){\n                imageRight = this._img.render();\n            } else {\n                imageLeft = this._img.render();\n            }\n        }\n\n        // Process any cards if this is a grid.\n        let cards = this.get_cards();\n\n        // Assemble the HTML for the cards\n        let cards_output = this._mobileCompact === 'true' ? `<div class=\"cards mobile-swipe\">` : `<div class=\"cards\">`;\n\n        cards.forEach( (card) => {\n            cards_output += new Card( card.dataset, this._mobileCompact ).render();\n        });\n\n        cards_output += `</div><!-- /.cards -->`;\n\n        // Assemble the output.\n        html += `\n            <div class=\"block-content\">\n                ${imageLeft}\n                ${this._header.render()}\n                ${imageRight}\n                ${cards_output}\n            </div><!-- /.block-content -->\n            `;\n\n        return html;\n    }\n}\n\n/**\n * Defines the Card object\n *\n *\n */\nexport class Card extends Block {\n    constructor(dataset, mobile_compact) {\n        super(dataset);\n\n        this._header = new Header(\n            this._type,\n            'h3',\n            dataset.headline,\n            dataset.headlineUrl,\n            dataset.headlineColor,\n            dataset.leader,\n            dataset.leaderListItems,\n            dataset.leaderListClass,\n            dataset.leaderListTag,\n            dataset.linkUrls,\n            dataset.linkTitles\n        );\n        this._mobileCompact = mobile_compact;\n    }\n    render(){\n        let html = '';\n        let img = '';\n\n        // Generate the HTML for the image if included.\n        if(this._type[0] === 'Image_card' && this._img){\n            img += this._img.render();\n        }\n\n        // Add the mobile-swipe class if requested.\n        let mobile = this._mobileCompact === 'true' ? 'mobile-swipe' : '';\n\n        html = `\n            <article class=\"card ${this._type.join(' ') } ${ mobile }\">\n                ${ img }\n                ${ this._header.render() }\n            </article>\n        `;\n        return html;\n    }\n}\n","/**\n * Defines the Image object.\n *\n * HTML Output:\n * <figure>\n *     <div class=\"img-box\">\n *         <img src=\"\" alt=\"\" />\n *      </div>\n *     <figcaption></figcaption>\n * </figure>\n *\n * @params\n *  _imgUrl (string)\n *  _imgAlt (string)\n *  _imgFormat (string)\n *    Options:\n *    'portrait' -- 3:4 ratio, vertical rectangle DEFAULT\n *    'square' -- 1:1 ratio box\n *    'landscape' -- 4:3 ratio, horizontal rectangle\n *    'wide' -- 16:9 horizontal rectangle\n *    'circle' -- You know, a circle\n *\n *  _showCaption: (boolean)\n *    If true, the _imgAlt value is displayed as the figcaption.\n *\n *  _imgX: (integer)\n *    Percentage to move the image horizontally within the container.\n *\n *  _imgY: (integer)\n *    Percentage to move the image vertically within the container.\n *\n *  _imgBorder (boolean)\n *    If true, a border is added to the div.img-box container.\n *\n *  _imgBorWidth (integer)\n *    Width in pixels of the image border.\n */\n\nclass Image {\n  constructor(\n    _imgUrl,\n    _imgAlt,\n    _imgFormat, //options: portrait | square | landscape | wide\n    _showCaption, // boolean: true | false\n    _imgX,\n    _imgY,\n    _imgBorder,\n    _imgBorWidth,\n    _imgShadow\n  ) {\n    this._url = encodeURI(_imgUrl);\n    this._alt = _imgAlt ? _imgAlt : 'This is a nice image.';\n    this._format = _imgFormat ? _imgFormat : 'landscape';\n    this._caption = _showCaption ? this._alt : '';\n    this._imgX = _imgX ? _imgX : 50;\n    this._imgY = _imgY ? _imgY : 50;\n    this._imgBorder = _imgBorder ? _imgBorder : 0;\n    this._imgBorWidth = _imgBorWidth ? _imgBorWidth : 0;\n    this._imgShadow = _imgShadow ? _imgShadow : 0;\n\n    // Determine the desired ratio.\n    switch (_imgFormat) {\n      case 'portrait':\n        this.ratio_multiplier = 4 / 3;\n        break;\n\n      case 'square':\n      case 'circle':\n        this.ratio_multiplier = 1;\n        break;\n\n      case 'wide':\n        this.ratio_multiplier = 9 / 16;\n        break;\n\n      default: // landscape\n        this.ratio_multiplier = 3 / 4;\n    }\n  }\n\n  /**\n   * Return the inline style declaration by tag.\n   * @param tag\n   * @returns {string}\n   */\n  style(tag){\n\n    switch (tag){\n      case 'div-frame':\n        return this._imgBorder ? `padding: ${this._imgBorWidth}px;` : '';\n\n      case'div-crop':\n        let circle = this._format === 'circle' ? `border-radius: 50%; overflow: hidden;` : '';\n        return `${circle} width:100%; height:0; padding-top:calc(100% * ${this.ratio_multiplier}); position:relative;`;\n\n      case 'img':\n        return `width:100%; height:100%; top:0; object-fit:cover; object-position:${this._imgX}% ${this._imgY}%; position:absolute;`;\n    }\n  }\n\n  /**\n   * Return the HTML output for the image.\n   * @returns {string}\n   */\n  render(){\n    // For responsive image markup, we need the filename w/o extension.\n    let pattern = /([\\w_\\-\\/\\d%\\s]+).[jpegsvn]+/;\n    let filename = this._url.match(pattern);\n    filename = decodeURI(filename[1]);  //style=\"${ this.style('div-crop') }\"\n\n    const html = `\n      <figure>\n        <div class=\"media-frame\" style=\"${ this.style('div-frame') }\">\n          <div class=\"crop-box ${ this._format }\">\n            <img srcset=\".${ filename }_600w.jpg 600w,\n                         .${ filename }_1200w.jpg 1200w,\n                         .${ filename }_1600w.jpg 1600w\" \n                sizes=\"(max-width: 600px) 600px, (max-width: 1200px) 1200px, 1600px\" \n                src=\"${ this._url }\" \n                alt=\"${ this._alt }\" \n                style=\"${ this.style('img') }\" \n                loading=\"lazy\" />\n          </div><!-- /.crop-box -->\n        </div><!-- /.media-frame -->\n        <figcaption>${ this._caption }</figcaption>\n      </figure>\n    `;\n    return html;\n  }\n}\n\nexport default Image;\n","import Block from \"./modules/Block\";\n//import './css/nilla.css';\n\n(() => {\n    // Polyfill for IE 11\n    // Adds .forEach handling to NodeLists--example querySelectorAll().\n    if (window.NodeList && !NodeList.prototype.forEach) {\n        NodeList.prototype.forEach = function (callback, thisArg) {\n            thisArg = thisArg || window;\n            for (var i = 0; i < this.length; i++) {\n                callback.call(thisArg, this[i], i, this);\n            }\n        };\n    }\n\n    let sections = document.querySelectorAll('section.u-block');\n    sections.forEach((section) => {\n        // Create a new Block object from the section.\n        const block = new Block(section.dataset,section.children);\n        // Turn the list of types into an array\n        let block_types = section.dataset.blockType ? section.dataset.blockType.split(' ') : [];\n        // Add each type declaration to the section's list of classes.\n        block_types.forEach( (type) => section.classList.add(type) );\n        // Add the background styles inline.\n        section.setAttribute('style', block.background());\n        // Insert the generated HTML.\n        section.innerHTML = block.render();\n    });\n})();"],"sourceRoot":""}